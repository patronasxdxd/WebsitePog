import {
  ButtonBase$1,
  getShade$2,
  jsx$4,
  require_react,
  styled$1$2
} from "./chunk-L6MV2ZBE.js";
import "./chunk-QDADR27D.js";
import "./chunk-N26OLTN6.js";
import "./chunk-Y3U5W2SV.js";
import "./chunk-5PXD5ZAG.js";
import "./chunk-UJII67DZ.js";
import "./chunk-G3LXFHP3.js";
import "./chunk-5QXZNWNO.js";
import "./chunk-SAXAG7U6.js";
import "./chunk-4CWOH7XN.js";
import {
  __toESM
} from "./chunk-JZQ37OGZ.js";

// ../node_modules/web3uikit/dist/ButtonCustom.js
var import_react = __toESM(require_react());
var ButtonCustomStyled$1 = styled$1$2(ButtonBase$1)`
    background-color: ${(p) => {
  var _a;
  return (_a = p.customize) == null ? void 0 : _a.backgroundColor;
}};

    span {
        color: ${(p) => {
  var _a;
  return (_a = p.customize) == null ? void 0 : _a.textColor;
}};
        font-size: ${(p) => {
  var _a;
  return ((_a = p.customize) == null ? void 0 : _a.fontSize) + "px";
}};
    }

    svg {
        fill: ${(p) => {
  var _a;
  return (_a = p.customize) == null ? void 0 : _a.textColor;
}};
    }

    :after {
        background-color: transparent;
        content: '';
        display: block;
        height: 100%;
        left: 0;
        pointer-events: none;
        position: absolute;
        top: 0;
        transition: all 0.3s ease;
        width: 100%;
        z-index: 0;
    }

    :hover {
        background-color: ${(p) => {
  var _a;
  return (_a = p.customize) == null ? void 0 : _a.backgroundColor;
}};

        :after {
            background-color: ${(p) => {
  var _a;
  return ((_a = p.customize) == null ? void 0 : _a.onHover) === "lighten" ? getShade$2("light", 20) : getShade$2("dark", 20);
}};
        }
    }

    :active {
        :after {
            background-color: ${(p) => {
  var _a;
  return ((_a = p.customize) == null ? void 0 : _a.onHover) === "lighten" ? getShade$2("light", 40) : getShade$2("dark", 40);
}};
        }
    }
`;
var styles = {
  ButtonCustomStyled: ButtonCustomStyled$1
};
var {
  ButtonCustomStyled
} = styles;
var ButtonCustom = ({
  customize,
  ...props
}) => {
  return jsx$4(ButtonCustomStyled, {
    customize,
    ...props
  });
};
export {
  ButtonCustom as default
};
//# sourceMappingURL=ButtonCustom-P4SYSV4G.js.map
