{
  "version": 3,
  "sources": ["../../../../node_modules/@web3auth/base-evm-adapter/src/baseEvmAdapter.ts"],
  "sourcesContent": [null],
  "mappings": ";;;;;;;;;;;;;;;;;IAasBA;;;;AAAhB,IAAgBA,iBAAhB,cAA0CC,YAAc;MACtC,MAAhBC,mBAAgB;AAAA,YAAA;AACpB,YAAI,CAAC,KAAKC,YAAY,GAAA,oBAAC,KAAKC,iBAAN,QAAA,sBAAA,UAAC,kBAAkBC;AAAS,gBAAMC,iBAAiBC,kBAAjB;AAExD,cAAM;UAAEC;UAAgBH;QAAlB,IAA8B,KAAKD;AAEzC,YAAI,KAAKK,WAAWC,eAAeC;AAAW,gBAAML,iBAAiBC,kBAAkB,uDAAnC;AACpD,cAAMK,WAAW,MAAM,KAAKT,SAASU,QAAkB;UACrDC,QAAQ;QAD6C,CAAhC;AAGvB,YAAIF,YAAYA,SAASG,SAAS,GAAG;AACnC,gBAAMC,gBAAgBC,cAAcL,SAAS,CAAD,GAAe,KAAKM,IAA7B;AACnC,cAAIF,eAAe;AACjB,kBAAMG,YAAYC,sBAAsBJ,aAAD;AACvC,gBAAI,CAACG,WAAW;AACd,qBAAO;gBAAEE,SAASL;;YACnB;UACF;AAED,gBAAMM,UAAU;YACdC,QAAQC,OAAOC,SAASC;YACxBC,KAAKH,OAAOC,SAASG;YACrBC,SAASjB,SAAS,CAAD;YACjBP,SAASyB,SAASzB,SAAS,EAAV;YACjB0B,SAAS;YACTC,OAAOC,KAAKC,OAAL,EAAcC,SAAS,EAAvB,EAA2BC,MAAM,CAAjC;YACPC,UAAU,IAAIC,KAAJ,EAAWC,YAAX;;AAGZ,gBAAMC,YAAY,MAAMC,cAAcnB,SAASd,cAAV;AAErC,gBAAMkC,gBAAgB,MAAM,KAAKvC,SAASU,QAAgB;YACxDC,QAAQ;YACR6B,QAAQ,CAACH,WAAW5B,SAAS,CAAD,CAApB;UAFgD,CAA9B;AAK5B,gBAAMS,UAAU,MAAMuB,sBAAsBpC,gBAAgBkC,eAAyBF,WAAW,KAAKtB,MAAM,KAAK2B,WAArE;AAC3CC,oBAAUlC,SAAS,CAAD,GAAe,KAAKM,MAAMG,OAAnC;AACT,iBAAO;YACLA;;QAEH;AACD,cAAMf,iBAAiBC,kBAAkB,uDAAnC;MACP;MAEe,MAAVwC,aAAU;AACd,YAAI,KAAKtC,WAAWC,eAAeC;AAAW,gBAAML,iBAAiB0C,mBAAmB,2BAApC;AACpD,cAAMpC,WAAW,MAAM,KAAKT,SAASU,QAAkB;UACrDC,QAAQ;QAD6C,CAAhC;AAGvB,YAAIF,YAAYA,SAASG,SAAS,GAAG;AACnCkC,qBAAWrC,SAAS,CAAD,GAAK,KAAKM,IAAnB;QACX;MACF;IArD2D;;;",
  "names": ["BaseEvmAdapter", "BaseAdapter", "authenticateUser", "provider", "chainConfig", "chainId", "WalletLoginError", "notConnectedError", "chainNamespace", "status", "ADAPTER_STATUS", "CONNECTED", "accounts", "request", "method", "length", "existingToken", "getSavedToken", "name", "isExpired", "checkIfTokenIsExpired", "idToken", "payload", "domain", "window", "location", "origin", "uri", "href", "address", "parseInt", "version", "nonce", "Math", "random", "toString", "slice", "issuedAt", "Date", "toISOString", "challenge", "signChallenge", "signedMessage", "params", "verifySignedChallenge", "sessionTime", "saveToken", "disconnect", "disconnectionError", "clearToken"]
}
