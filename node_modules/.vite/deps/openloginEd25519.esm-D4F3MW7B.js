import {
  require_nacl_fast
} from "./chunk-D7VE5B2E.js";
import "./chunk-5QXZNWNO.js";
import {
  __esm,
  __toESM
} from "./chunk-JZQ37OGZ.js";

// ../node_modules/@toruslabs/openlogin-ed25519/dist/openloginEd25519.esm.js
function getED25519Key(privateKey) {
  let privKey;
  if (typeof privateKey === "string") {
    privKey = Buffer.from(privateKey, "hex");
  } else {
    privKey = privateKey;
  }
  const d = new Uint8Array(64);
  const p = [l.gf(), l.gf(), l.gf(), l.gf()];
  const sk = new Uint8Array([...new Uint8Array(privKey), ...new Uint8Array(32)]);
  const pk = new Uint8Array(32);
  l.crypto_hash(d, sk, 32);
  d[0] &= 248;
  d[31] &= 127;
  d[31] |= 64;
  l.scalarbase(p, d);
  l.pack(pk, p);
  for (let i = 0; i < 32; i += 1)
    sk[i + 32] = pk[i];
  return {
    sk: Buffer.from(sk),
    pk: Buffer.from(pk)
  };
}
var import_tweetnacl_js, l;
var init_openloginEd25519_esm = __esm({
  "../node_modules/@toruslabs/openlogin-ed25519/dist/openloginEd25519.esm.js"() {
    import_tweetnacl_js = __toESM(require_nacl_fast());
    l = import_tweetnacl_js.default.lowlevel;
  }
});
init_openloginEd25519_esm();
export {
  getED25519Key
};
//# sourceMappingURL=openloginEd25519.esm-D4F3MW7B.js.map
